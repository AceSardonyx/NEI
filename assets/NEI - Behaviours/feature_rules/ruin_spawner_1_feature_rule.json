{
    "format_version": "1.13.0",
    "minecraft:feature_rules": {
        "description": {
            "identifier": "minecraft:ruin_spawner_1_feature_rule",
            "places_feature": "minecraft:ruin_spawner_1_feature_mcstructure"
        },
        "conditions": {
            "placement_pass": "surface_pass",
            "minecraft:biome_filter": [
                {
                    "all_of": [
                        {
                            "test": "has_biome_tag",
                            "operator": "!=",
                            "value": "ocean"
                        },
                        {
                            "test": "has_biome_tag",
                            "operator": "!=",
                            "value": "lakes"
                        },
                        {
                            "test": "has_biome_tag",
                            "operator": "!=",
                            "value": "river"
                        },
                        {
                            "any_of": [
                                {
                                    "test": "has_biome_tag",
                                    "operator": "==",
                                    "value": "plains"
                                },
                                {
                                    "test": "has_biome_tag",
                                    "operator": "==",
                                    "value": "jungle"
                                },
                                {
                                    "test": "has_biome_tag",
                                    "operator": "==",
                                    "value": "forest"
                                },
                                {
                                    "test": "has_biome_tag",
                                    "operator": "==",
                                    "value": "savanna"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "distribution": {
            "iterations": 1,
            "scatter_chance": 0.1,
            "x": {
                "distribution": "uniform",
                "extent": [
                    0,
                    16
                ]
            },
            "y": "query.heightmap(variable.worldx, variable.worldz) + 0",
            "z": {
                "distribution": "uniform",
                "extent": [
                    0,
                    16
                ]
            }
        }
    }
}